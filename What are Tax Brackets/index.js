// Calculate Single Taxpayer Federal Taxes: taking a single deduction

var standardDeduction = 12000;

function calculateFederalTax(income) {
    // Take out standard deduction
    income = income - standardDeduction;

    if (income <= 0) { return 0; }
    if (income > 200000) { return -1}
    
    if(income >= 157501) {
        return (income - 157501) * .32
        + (157500 - 82501) * .24
        + (82500-38701) * .22
        + (38700 - 9525) * .12
        + 9525 * .1;

    } else if(income >= 82501) {
        return (income - 82501) * .24
        + (82500-38701) * .22
        + (38700 - 9525) * .12
        + 9525 * .1;

    } else if (income >= 38701) {
        return (income - 38701) * .22 
        + (38700 - 9525) * .12
        + 9525 * .1;

    } else if (income >= 9525) {
        return (income - 9525) * .12
        + 9525 * .1;
    } else {
        return income * .1;
    }

}

 console.log(calculateFederalTax(19000));
 console.log(calculateFederalTax(30000));
 console.log(calculateFederalTax(50000));
 console.log(calculateFederalTax(60000));
 console.log(calculateFederalTax(100000));
 console.log(calculateFederalTax(200000));

// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------

maxTaxesPerTaxBracket = [952.5, 4453.62, 14089.62, 32089.50]

function calculateFederalTax2(income) {
    // Take out standard deduction
    income = income - standardDeduction;

    if (income <= 0) { return 0; }
    if (income > 200000) { return -1 }

     if(income >= 157501) {
        return (income - 157501) * .32
        + maxTaxesPerTaxBracket[3];

    } else if(income >= 82501) {
        return (income - 82501) * .24
        + maxTaxesPerTaxBracket[2];

    } else if (income >= 38701) {
        return (income - 38701) * .22 
        + maxTaxesPerTaxBracket[1];

    } else if (income >= 9525) {
        return (income - 9525) * .12
        + maxTaxesPerTaxBracket[0];

    } else {
        return income * .1;
    }

}

 console.log(calculateFederalTax2(19000));
 console.log(calculateFederalTax2(30000));
 console.log(calculateFederalTax2(50000));
 console.log(calculateFederalTax2(60000));
 console.log(calculateFederalTax2(100000));
 console.log(calculateFederalTax2(200000));